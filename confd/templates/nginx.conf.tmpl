events {
  worker_connections  4096;  ## Default: 1024
}

http {
{{ range $machine := lsdir "/docker/machines/" }}
{{/* $machineInfo := json (printf "%s%s%s" "/docker/machines/" . "/info" | getv) */}}
{{ range (printf "%s%s%s" "/docker/machines/" $machine "/containers/*" | getvs) }}
{{ $c := json . }}
{{ $webPortMapping := index $c.NetworkSettings.Ports "80/tcp" }}
{{ if $webPortMapping }}
{{ $port := (index $webPortMapping 0).HostPort }}
upstream {{base $c.Name}} {
    server {{ $machine }}:{{$port}};
}
{{ end }}
{{ end }}
{{ end }}

{{ range $machine := lsdir "/docker/machines/" }}
{{/* $machineInfo := json (printf "%s%s%s" "/docker/machines/" . "/info" | getv) */}}
{{ range (printf "%s%s%s" "/docker/machines/" $machine "/containers/*" | getvs) }}
{{ $c := json . }}
{{ $webPortMapping := index $c.NetworkSettings.Ports "80/tcp" }}
{{ if $webPortMapping }}
{{ $port := (index $webPortMapping 0).HostPort }}
{{ $name := base $c.Name }}
server {
    server_name  {{$name}};
    listen 80;

    access_log /var/log/nginx/access.log;

    location / {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://{{$name}};
    }
}
{{ end }}
{{ end }}
{{ end }}

server {
    listen 80 default_server;

    access_log /var/log/nginx/access.log;

    location / {
      root /usr/share/nginx/html;
    }

{{ range $machine := lsdir "/docker/machines/" }}
{{/* $machineInfo := json (printf "%s%s%s" "/docker/machines/" . "/info" | getv)
*/}}
{{ range (printf "%s%s%s" "/docker/machines/" $machine "/containers/*" | getvs) }}
{{ $c := json . }}
{{ $webPortMapping := index $c.NetworkSettings.Ports "80/tcp" }}
{{ if $webPortMapping }}
{{ $port := (index $webPortMapping 0).HostPort }}
{{ $name := base $c.Name }}
    location /{{$name}} {
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://{{$name}};
    }
{{ end }}
{{ end }}
{{ end }}
}
}
